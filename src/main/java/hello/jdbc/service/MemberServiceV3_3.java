package hello.jdbc.service;import java.sql.SQLException;import org.springframework.transaction.PlatformTransactionManager;import org.springframework.transaction.annotation.Transactional;import org.springframework.transaction.support.TransactionTemplate;import hello.jdbc.domain.Member;import hello.jdbc.repository.MemberRepositoryV3;import lombok.RequiredArgsConstructor;import lombok.extern.slf4j.Slf4j;/** * 트랜잭션 - 트랜잭션 템플릿 */@RequiredArgsConstructor@Slf4jpublic class MemberServiceV3_3 {	private final MemberRepositoryV3 repository;	@Transactional	public void accountTransfer(String fromId, String toId, int money) throws SQLException {		bizLogic(fromId, toId, money);	}	private void bizLogic( String fromId, String toId, int money) throws SQLException {		Member fromMember = repository.findById(fromId);		Member toMember = repository.findById(toId);		repository.update(fromMember.getMemberId(), fromMember.getMoney() - money);		validation(toMember);		repository.update(toMember.getMemberId(), toMember.getMoney() + money);	}	private void validation(Member toMember) {		if ("ex".equals(toMember.getMemberId())) {			throw new IllegalStateException("이체중 예외 발생");		}	}}