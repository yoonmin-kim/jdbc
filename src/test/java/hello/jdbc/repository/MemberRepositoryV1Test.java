package hello.jdbc.repository;import static hello.jdbc.connection.ConnectionConst.*;import static org.assertj.core.api.Assertions.*;import java.sql.SQLException;import java.util.NoSuchElementException;import org.junit.jupiter.api.BeforeEach;import org.junit.jupiter.api.Test;import org.springframework.jdbc.datasource.DriverManagerDataSource;import com.zaxxer.hikari.HikariDataSource;import hello.jdbc.connection.ConnectionConst;import hello.jdbc.domain.Member;class MemberRepositoryV1Test {	MemberRepositoryV1 repository;	@BeforeEach	void beforeEach() {		// DriverManagerDataSource datasource = new DriverManagerDataSource(URL, USERNAME, PASSWORD);		HikariDataSource datasource = new HikariDataSource();		datasource.setJdbcUrl(URL);		datasource.setUsername(USERNAME);		datasource.setPassword(PASSWORD);		repository = new MemberRepositoryV1(datasource);	}	@Test	void crud() throws SQLException, InterruptedException {		// save		Member member = new Member("memberV6", 10000);		repository.save(member);		// find		Member findMember = repository.findById(member.getMemberId());		assertThat(findMember).isEqualTo(member);		// update money 10000->20000		repository.update(member.getMemberId(), 20000);		Member updatedMember = repository.findById(member.getMemberId());		assertThat(updatedMember.getMoney()).isEqualTo(20000);		// delete		repository.delete(member.getMemberId());		assertThatThrownBy(() -> repository.findById(member.getMemberId())).isInstanceOf(NoSuchElementException.class);		Thread.sleep(1000l);	}}